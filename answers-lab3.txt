Excercise 3

Question 1
What is the purpose of having an individual handler function for each exception/interrupt? (i.e., 
if all exceptions/interrupts were delivered to the same handler, what feature that exists in the current implementation could not be provided?)

Answer to Q1
The purpose of having mutliple interrupt handler for each function for each exception/interrupt is that we dont want all interrupts to have control of the kernel or
just have user permissions. The addition of multiple interrupt handlers allows for different permission types to be set for each exception/interrupt.
Having multiple handler functions also allows you to differentiate between each exception/interrupt that called the handler. 


Question 2
Did you have to do anything to make the user/softint program behave correctly?
The grade script expects it to produce a general protection fault (trap 13), but softint’s code says int $14. 
Why should this produce interrupt vector 13?
What happens if the kernel actually allows softint’s int $14 instruction to invoke the kernel’s page fault handler (which is interrupt vector 14)?

Answer to Q2 

No, we did not have to do anything to make the user/softint program behave correctly. This should produce a general protection fault(trap 13) interrupt vector 13 
because the softint user program tries to call the page fault handler but as a USER. However, page fault handler is a kernal permission interrupt therefore it will trigger a general protection fault.
which handle